name: Flask Tests and Docker Build

on:
  push:
    branches-ignore:
      - main  # Run on pushes to all branches except main
  pull_request:
    branches:
      - main  # Run on PRs targeting main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "pip"
        cache-dependency-path: |
          requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    - name: Run unit tests
      id: unittest
      run: |
        pytest tests/ -v --color=yes

    - name: Build Docker image
      id: docker_build
      run: |
        docker build -t flask-app:test .
        docker images

    - name: Run Docker container
      id: docker_run
      run: |
        docker run -d -p 5000:5000 --name flask-test flask-app:test
        sleep 5  # Wait for container to start

    - name: Test endpoints
      id: test_endpoints
      run: |
        # Test root endpoint
        ROOT_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/)
        echo "Root endpoint status: $ROOT_STATUS"
        if [ "$ROOT_STATUS" != "200" ]; then
          echo "Root endpoint test failed"
          exit 1
        fi
        
        # Test greet endpoint
        GREET_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/greet/test)
        echo "Greet endpoint status: $GREET_STATUS"
        if [ "$GREET_STATUS" != "200" ]; then
          echo "Greet endpoint test failed"
          exit 1
        fi

    - name: Cleanup Docker
      if: always()
      run: |
        docker stop flask-test || true
        docker rm flask-test || true

    - name: Auto-merge PR
      if: |
        github.event_name == 'pull_request' && 
        steps.unittest.outcome == 'success' &&
        steps.test_endpoints.outcome == 'success' &&
        github.event.pull_request.base.ref == 'main'
      uses: pascalgn/automerge-action@v0.15.6
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        MERGE_LABELS: ""
        MERGE_METHOD: "merge"
        MERGE_DELETE_BRANCH: "false"
        MERGE_COMMIT_MESSAGE: "Auto-merge PR #{number} after successful tests and Docker validation âœ¨"

